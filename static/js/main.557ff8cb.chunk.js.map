{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["authService","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setnewNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","toggleEditing","console","log","updateDoc","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","getDownloadURL","addDoc","collection","createdAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","q","query","orderBy","unsubscribe","onSnapshot","querySnapshot","newArray","docs","map","data","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","currentUser","signOut","push","Navigation","display","justifyContent","flexDirection","textAlign","to","fontSize","alignItems","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.557ff8cb.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    // console.log(event.target.name);\n    const {\n      target: { name, value },\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      let data;\n      if (newAccount) {\n        // create newAccount\n        data = await createUserWithEmailAndPassword(authService, email, password);\n      } else {\n        // log in\n        data = await signInWithEmailAndPassword(authService, email, password);\n      }\n      //   console.log(data);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\" />\n        <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" />\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} className=\"authInput authSubmit\" />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import { authService } from \"fbase\";\nimport { GoogleAuthProvider, GithubAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport React, { useState } from \"react\";\nimport AuthForm from \"components/AuthForm\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new GithubAuthProvider();\n    }\n    const data = await signInWithPopup(authService, provider);\n    // console.log(data);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" style={{ marginBottom: 30 }} />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\nimport { deleteObject, ref } from \"firebase/storage\";\nimport { dbService, storageService } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setnewNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"삭제하시겠습니까?\");\n    if (ok) {\n      await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\n      if (nweetObj.attachmentUrl !== \"\") {\n        await deleteObject(ref(storageService, nweetObj.attachmentUrl));\n        //await storageService.refFormURL(nweetObj.attachmentUrl).delete();\n      }\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setnewNweet(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    console.log(nweetObj.id, newNweet);\n\n    await updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input onChange={onChange} value={newNweet} required placeholder=\"Edit yout nweet\" autoFocus className=\"formInput\" />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </button>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {/* {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />} */}\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (nweet === \"\") {\n      return;\n    }\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n      const response = await uploadString(attachmentRef, attachment, \"data_url\");\n      attachmentUrl = await getDownloadURL(attachmentRef);\n      //   console.log(response);\n    }\n\n    await addDoc(collection(dbService, \"nweets\"), {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    });\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    event.preventDefault();\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    // console.log(event.target.files);\n    // console.log(event, \"event\");\n    // console.log(event.target, \"target\");\n\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    // reader.readAsDataURL(theFile);\n    reader.onloadend = (finishedEvent) => {\n      //   console.log(finishedEvent);\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    if (Boolean(theFile)) {\n      reader.readAsDataURL(theFile);\n    }\n  };\n\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input className=\"factoryInput__input\" value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} />\n        <input className=\"factoryInput__arrow\" type=\"submit\" value=\"&rarr;\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input id=\"attach-file\" type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{ opacity: 0 }} />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img src={attachment} style={{ backgroundImage: attachment }} />\n\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span>Removes</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import { dbService } from \"fbase\";\nimport { collection, query, onSnapshot, orderBy } from \"firebase/firestore\";\nimport React, { useState, useEffect } from \"react\";\nimport Nweet from \"components/Nweet\";\n\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    const q = query(collection(dbService, \"nweets\"), orderBy(\"createdAt\", \"desc\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const newArray = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ...doc.data(),\n        };\n      });\n      setNweets(newArray);\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { authService, dbService } from \"fbase\";\nimport { useHistory } from \"react-router\";\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\nimport { updateProfile } from \"firebase/auth\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await updateProfile(authService.currentUser, { displayName: newDisplayName });\n      refreshUser();\n    }\n  };\n\n  //   const getMyNweets = async () => {\n  //     const q = query(collection(dbService, \"nweets\"), where(\"creatorId\", \"==\", userObj.uid));\n  //     const querySnapshot = await getDocs(q);\n  //     querySnapshot.forEach((doc) => {\n  //       console.log(doc.id, \" => \", doc.data());\n  //     });\n  //   };\n\n  //   useEffect(() => {\n  //     getMyNweets();\n  //   }, []);\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input onChange={onChange} value={newDisplayName} type=\"text\" placeholder=\"Display name\" autoFocus className=\"formInput\" />\n        <input type=\"submit\" value=\"Update Profile\" className=\"formBtn\" style={{ marginTop: 10 }} />\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul style={{ display: \"flex\", justifyContent: \"center\", flexDirection: \"column\", marginTop: 50, textAlign: \"center\" }}>\n        <li>\n          <Link to=\"/\" style={{ display: \"flex\", justifyContent: \"center\", color: \"#112D4E\", fontSize: 38, marginBottom: 50 }}>\n            NWEETER\n            {/* <FontAwesomeIcon icon={faTwitter} color={\"#3f72af\"} size=\"2x\" /> */}\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/profile\" style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", fontSize: 12 }}>\n            <FontAwesomeIcon icon={faUser} color={\"#3f72af\"} size=\"2x\" />\n            <span style={{ marginTop: 10, color: \"#3f72af\" }}>{userObj.displayName ? `${userObj.displayName}의 Profile` : \"Profile\"}</span>\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        <>\n          {isLoggedIn ? (\n            <div\n              style={{\n                maxWidth: 890,\n                width: \"100%\",\n                margin: \"0 auto\",\n                marginTop: 80,\n                display: \"flex\",\n                justifyContent: \"center\",\n              }}\n            >\n              <Route exact path=\"/\">\n                <Home userObj={userObj} />\n              </Route>\n              <Route exact path=\"/profile\">\n                <Profile refreshUser={refreshUser} userObj={userObj} />\n              </Route>\n            </div>\n          ) : (\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          )}\n        </>\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n// import { updateProfile } from \"firebase/auth\";\nimport { updateProfile } from \"firebase/auth\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        // console.log(user.displayName);\n        if (user.displayName === null) {\n          updateProfile(userObj, { displayName: \"User\" });\n        }\n\n        // setIsLoggedIn(user);\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n        // setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    // setUserObj(authService.currentUser);\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"initializing...\"}\n      {/* <footer>&copy;{new Date().getFullYear()} Nwitter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n// import firebase from \"firebase/compat/app\";\n// console.log(firebase);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}