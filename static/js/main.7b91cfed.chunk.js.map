{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["authService","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","dbService","getFirestore","storageService","getStorage","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setnewNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","toggleEditing","console","log","updateDoc","src","width","height","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","response","getDownloadURL","addDoc","collection","createdAt","Date","now","creatorId","maxLength","accept","files","theFile","reader","FileReader","readAsDataURL","onloadend","finishedEvent","result","currentTarget","Home","nweets","setNweets","useEffect","q","query","orderBy","unsubscribe","onSnapshot","querySnapshot","newArray","docs","map","data","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","currentUser","signOut","push","Navigation","to","AppRouter","isLoggedIn","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7b91cfed.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();\n","import React, { useState } from \"react\";\nimport { authService } from \"fbase\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(true);\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    // console.log(event.target.name);\n    const {\n      target: { name, value },\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      let data;\n      if (newAccount) {\n        // create newAccount\n        data = await createUserWithEmailAndPassword(authService, email, password);\n      } else {\n        // log in\n        data = await signInWithEmailAndPassword(authService, email, password);\n      }\n      //   console.log(data);\n    } catch (error) {\n      setError(error);\n    }\n  };\n\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} />\n        <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} />\n        <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} />\n        {error}\n      </form>\n      <span onClick={toggleAccount}>{newAccount ? \"Sign In\" : \"Create Account\"}</span>;\n    </>\n  );\n};\n\nexport default AuthForm;\n","import { authService } from \"fbase\";\nimport { GoogleAuthProvider, GithubAuthProvider, signInWithPopup } from \"firebase/auth\";\nimport React, { useState } from \"react\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new GoogleAuthProvider();\n    } else if (name === \"github\") {\n      provider = new GithubAuthProvider();\n    }\n    const data = await signInWithPopup(authService, provider);\n    // console.log(data);\n  };\n  return (\n    <div>\n      <AuthForm />\n      <div>\n        <button onClick={onSocialClick} name=\"google\">\n          Continue with Google\n        </button>\n        <button onClick={onSocialClick} name=\"github\">\n          Continue with Github\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n","import React, { useState } from \"react\";\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\nimport { deleteObject, ref } from \"firebase/storage\";\nimport { dbService, storageService } from \"fbase\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setnewNweet] = useState(nweetObj.text);\n\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"삭제하시겠습니까?\");\n    if (ok) {\n      await deleteDoc(doc(dbService, `nweets/${nweetObj.id}`));\n      if (nweetObj.attachmentUrl !== \"\") {\n        await deleteObject(ref(storageService, nweetObj.attachmentUrl));\n        //await storageService.refFormURL(nweetObj.attachmentUrl).delete();\n      }\n    }\n  };\n\n  const toggleEditing = () => setEditing((prev) => !prev);\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setnewNweet(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    console.log(nweetObj.id, newNweet);\n\n    await updateDoc(doc(dbService, `nweets/${nweetObj.id}`), {\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n\n  return (\n    <div>\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit}>\n            <input onChange={onChange} value={newNweet} required />\n            <input type=\"submit\" value=\"Update Nweet\" />\n          </form>\n          <button onClick={toggleEditing}>Cancel</button>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />}\n          {isOwner && (\n            <>\n              <button onClick={onDeleteClick}>Delete Nweet</button>\n              <button onClick={toggleEditing}>Edit Nweet</button>\n            </>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { dbService, storageService } from \"fbase\";\nimport { collection, addDoc } from \"firebase/firestore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\n\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n      const response = await uploadString(attachmentRef, attachment, \"data_url\");\n      attachmentUrl = await getDownloadURL(attachmentRef);\n      console.log(response);\n    }\n\n    await addDoc(collection(dbService, \"nweets\"), {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    });\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = (event) => {\n    event.preventDefault();\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n\n  const onFileChange = (event) => {\n    console.log(event.target.files);\n    console.log(event, \"event\");\n    console.log(event.target, \"target\");\n\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.readAsDataURL(theFile);\n    reader.onloadend = (finishedEvent) => {\n      //   console.log(finishedEvent);\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n  };\n\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit}>\n      <input value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120} />\n      <input type=\"file\" accept=\"image/*\" onChange={onFileChange} />\n      <input type=\"submit\" value=\"Nweet\" />\n      {attachment && (\n        <div>\n          <img src={attachment} width=\"50px\" height=\"50px\" />\n          <button onClick={onClearAttachment}>Clear</button>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import { dbService } from \"fbase\";\nimport { collection, query, onSnapshot, orderBy } from \"firebase/firestore\";\nimport React, { useState, useEffect } from \"react\";\nimport Nweet from \"components/Nweet\";\n\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    const q = query(collection(dbService, \"nweets\"), orderBy(\"createdAt\"));\n    const unsubscribe = onSnapshot(q, (querySnapshot) => {\n      const newArray = querySnapshot.docs.map((doc) => {\n        return {\n          id: doc.id,\n          ...doc.data(),\n        };\n      });\n      setNweets(newArray);\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  return (\n    <>\n      <NweetFactory userObj={userObj} />\n      <div>\n        {nweets.map((nweet) => (\n          <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\nimport { authService, dbService } from \"fbase\";\nimport { useHistory } from \"react-router\";\nimport { collection, getDocs, query, where } from \"firebase/firestore\";\nimport { updateProfile } from \"firebase/auth\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n  const onLogOutClick = () => {\n    authService.signOut();\n    history.push(\"/\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await updateProfile(authService.currentUser, { displayName: newDisplayName });\n      refreshUser();\n    }\n  };\n\n  //   const getMyNweets = async () => {\n  //     const q = query(collection(dbService, \"nweets\"), where(\"creatorId\", \"==\", userObj.uid));\n  //     const querySnapshot = await getDocs(q);\n  //     querySnapshot.forEach((doc) => {\n  //       console.log(doc.id, \" => \", doc.data());\n  //     });\n  //   };\n\n  //   useEffect(() => {\n  //     getMyNweets();\n  //   }, []);\n\n  return (\n    <>\n      <form onSubmit={onSubmit}>\n        <input onChange={onChange} value={newDisplayName} type=\"text\" placeholder=\"Display name\" />\n        <input type=\"submit\" value=\"Update Profile\" />\n      </form>\n      <button onClick={onLogOutClick}>Log Out</button>\n    </>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst Navigation = ({ userObj }) => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/profile\">{userObj.displayName}의 Profile</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <>\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile refreshUser={refreshUser} userObj={userObj} />\n            </Route>\n          </>\n        ) : (\n          <Route exact path=\"/\">\n            <Auth />\n          </Route>\n        )}\n        {/* <Redirect from=\"*\" to=\"/\" /> */}\n      </Switch>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { useState, useEffect } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n// import { updateProfile } from \"firebase/auth\";\nimport { updateProfile } from \"firebase/auth\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        console.log(user.displayName);\n        if (user.displayName === null) {\n          updateProfile(userObj, { displayName: \"User\" });\n        }\n\n        // setIsLoggedIn(user);\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(false);\n        // setIsLoggedIn(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    // setUserObj(authService.currentUser);\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj} /> : \"initializing...\"}\n      {/* <footer>&copy;{new Date().getFullYear()} Nwitter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\n// import firebase from \"firebase/compat/app\";\n// console.log(firebase);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}